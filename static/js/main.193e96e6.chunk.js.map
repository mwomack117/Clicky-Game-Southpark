{"version":3,"sources":["images/chef.png","images/butters.png","images/cartmen.png","images/garrison.png","images/ike.png","images/jimmy.png","images/kenny.png","images/kyle.png","images/nathan.png","images/PC.png","images/stan.png","images/token.png","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","images","id","path","chef","beenClicked","butters","cartmen","garrison","ike","jimmy","kenny","kyle","nathan","PC","stan","token","App","state","score","topScore","message","clickedArray","handleImageClick","event","currentId","target","alt","console","log","shuffledArray","_this","shuffleArray","setState","includes","concat","Object","toConsumableArray","i","length","j","Math","floor","random","_ref","_this2","this","displayImages","map","eachItem","key","src","onClick","href","components_Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.193e96e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef.480cec65.png\";","module.exports = __webpack_public_path__ + \"static/media/butters.58d9fe27.png\";","module.exports = __webpack_public_path__ + \"static/media/cartmen.fa49c424.png\";","module.exports = __webpack_public_path__ + \"static/media/garrison.e0fa4cab.png\";","module.exports = __webpack_public_path__ + \"static/media/ike.1b825341.png\";","module.exports = __webpack_public_path__ + \"static/media/jimmy.e7906961.png\";","module.exports = __webpack_public_path__ + \"static/media/kenny.b996a678.png\";","module.exports = __webpack_public_path__ + \"static/media/kyle.6fc3e8a4.png\";","module.exports = __webpack_public_path__ + \"static/media/nathan.b09d28c5.png\";","module.exports = __webpack_public_path__ + \"static/media/PC.c0290148.png\";","module.exports = __webpack_public_path__ + \"static/media/stan.e25ed94c.png\";","module.exports = __webpack_public_path__ + \"static/media/token.f021edc0.png\";","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n    <footer className=\"container-fluid\">\n        <h3>South Park Clicky Game</h3>\n    </footer>\n)\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport chef from \"./images/chef.png\";\nimport butters from \"./images/butters.png\";\nimport cartmen from \"./images/cartmen.png\";\nimport garrison from \"./images/garrison.png\";\nimport ike from \"./images/ike.png\";\nimport jimmy from \"./images/jimmy.png\";\nimport kenny from \"./images/kenny.png\";\nimport kyle from \"./images/kyle.png\";\nimport nathan from \"./images/nathan.png\";\nimport PC from \"./images/PC.png\";\nimport stan from \"./images/stan.png\";\nimport token from \"./images/token.png\";\n// import images from \"./images.json\";\n\nlet images = [\n  {\n    id: 1,\n    path: chef,\n    beenClicked: false\n  },\n  {\n    id: 2,\n    path: butters,\n    beenClicked: false\n  },\n  {\n    id: 3,\n    path: cartmen,\n    beenClicked: false\n  },\n  {\n    id: 4,\n    path: garrison,\n    beenClicked: false\n  },\n  {\n    id: 5,\n    path: ike,\n    beenClicked: false\n  },\n  {\n    id: 6,\n    path: jimmy,\n    beenClicked: false\n  },\n  {\n    id: 7,\n    path: kenny,\n    beenClicked: false\n  },\n  {\n    id: 8,\n    path: kyle,\n    beenClicked: false\n  },\n  {\n    id: 9,\n    path: nathan,\n    beenClicked: false\n  },\n  {\n    id: 10,\n    path: PC,\n    beenClicked: false\n  },\n  {\n    id: 11,\n    path: stan,\n    beenClicked: false\n  },\n  {\n    id: 12,\n    path: token,\n    beenClicked: false\n  }\n];\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    message: \"Click any image to begin!\",\n    images: images,\n    clickedArray: []\n  };\n\n  // Function to handle clicked images and update score\n  handleImageClick = event => {\n    let currentId = event.target.alt;\n    console.log(currentId);\n    console.log(event.target);\n    // Shuffle the images\n    const shuffledArray = this.shuffleArray(images);\n    this.setState({ images: shuffledArray });\n    console.log(\"image clicked\");\n\n    // If image has already been clicked set this.state.score = 0, empty clickedArray\n    if (this.state.clickedArray.includes(currentId)) {\n      this.setState({\n        score: 0,\n        clickedArray: [],\n        message: \"Incorrect!! Click any image to restart!\"\n      });\n      // Else\n    } else {\n      this.setState({\n        score: this.state.score + 1,\n        // clickedArray: this.state.clickedArray.concat([images.id]),\n        clickedArray: [...this.state.clickedArray, currentId],\n        message: \"Correct!!\"\n      });\n    }\n    // set topscore = score if score>topscore.\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  };\n\n  // Shuffle function\n  shuffleArray = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n\n  render() {\n    let displayImages = this.state.images.map(eachItem => (\n      <img\n        alt={eachItem.id}\n        key={eachItem.id}\n        src={eachItem.path}\n        onClick={this.handleImageClick}\n      />\n    ));\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar\">\n          <div className=\"brand\">\n            <a href=\"/\">Clicky Game</a>\n          </div>\n          <div>{this.state.message}</div>\n          <div>\n            Score: {this.state.score} | Top Score: {this.state.topScore}\n          </div>\n        </nav>\n\n        <header className=\"header\">\n          <h1>South Park Clicky Game!</h1>\n          <h2>\n            Click on an image to earn points, but don't click on any more than\n            once!\n          </h2>\n        </header>\n\n        <div className=\"img-container\">\n          <div className=\"images\">{displayImages}</div>\n        </div>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}